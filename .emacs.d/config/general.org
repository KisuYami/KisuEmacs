#+TITLE: General

* General
#+BEGIN_SRC emacs-lisp
   (setq-default indent-tabs-mode t)
   (setq tab-width 4) ; or any other preferred value
   (defvaralias 'c-basic-offset 'tab-width)

   ;; Local LISP
   (add-to-list 'load-path "~/.emacs.d/lisp/")

   ;; Ask
   (defalias 'yes-or-no-p 'y-or-n-p)
   
   ;; Ring
   (setq ring-bell-function 'ignore)
#+END_SRC
** Terminal
#+BEGIN_SRC emacs-lisp
   (defvar my-shell "/bin/bash")
   (defadvice ansi-term (before force-bash)
   (interactive (list my-shell)))
   (ad-activate 'ansi-term)
#+END_SRC
** Backup
#+BEGIN_SRC emacs-lisp
	;disable backup
	(setq backup-inhibited t)
	;disable auto save
	(setq auto-save-default nil)
	#+END_SRC
* Modes
** I-Do
   #+BEGIN_SRC emacs-lisp
  (setq ido-enable-matching nil)
  (setq ido-create-new-buffer 'always)
  (setq ido-everywhere t)
  (ido-mode 1)
   #+END_SRC
** Evil
*** Aways Evil
    #+BEGIN_SRC emacs-lisp
  (setq evil-emacs-state-modes nil)
  (setq evil-insert-state-modes nil)
  (setq evil-motion-state-modes nil)
    #+END_SRC
*** PageDown/Up
    #+BEGIN_SRC emacs-lisp
    (define-key evil-normal-state-map (kbd "C-k") (lambda ()
                    (interactive)
                    (evil-scroll-up nil)))
    (define-key evil-normal-state-map (kbd "C-j") (lambda ()
                        (interactive)
                        (evil-scroll-down nil)))

    #+END_SRC
*** No insert back
    #+BEGIN_SRC emacs-lisp
(setq evil-move-cursor-back nil)
    #+END_SRC
** Org
#+BEGIN_SRC emacs-lisp
  (setq org-src-window-setup 'current-window)

  (add-to-list 'org-structure-template-alist
			   '("el" "#+BEGIN_SRC emacs-lisp\n?\n#+END_SRC"))
#+END_SRC
** C
   #+BEGIN_SRC emacs-lisp
     (setq c-default-style "bsd"
	       c-basic-offset 4)

     (setq-default c-basic-offset 4)
   #+END_SRC
*** Compilation
#+BEGIN_SRC emacs-lisp
(defun brian-compile-finish (buffer outstr)
(unless (string-match "finished" outstr)
(switch-to-buffer-other-window buffer))
t)

(setq compilation-finish-functions 'brian-compile-finish)

(require 'cl)

(defadvice compilation-start
(around inhibit-display
	(command &optional mode name-function highlight-regexp)) 
(if (not (string-match "^\\(find\\|grep\\)" command))
	(cl-flet ((display-buffer)
		(set-window-point)
		(goto-char)) 
(fset 'display-buffer 'ignore)
(fset 'goto-char 'ignore)
(fset 'set-window-point 'ignore)
(save-window-excursion 
	ad-do-it))
ad-do-it))

(ad-activate 'compilation-start)
#+END_SRC
